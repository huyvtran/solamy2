{"version":3,"file":"html-escape-unescape.js","sources":["ts/html-escape-unescape.ts","ts/src/app/html-escape-unescape/html-escape-unescape.module.ts","ts/src/app/html-escape-unescape/pipes/unescape.pipe.ts","ts/src/app/html-escape-unescape/pipes/escape.pipe.ts","ts/src/app/html-escape-unescape/unescape.ts","ts/src/app/html-escape-unescape/escape.ts","ts/src/app/html-escape-unescape/config.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {HTMLEscapeUnescapeModule} from './exposables';\n\nexport {Escape as ɵc} from './src/app/html-escape-unescape/escape';\nexport {EscapePipe as ɵa,UnescapePipe as ɵb} from './src/app/html-escape-unescape/pipes';\nexport {Unescape as ɵd} from './src/app/html-escape-unescape/unescape';","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Escape } from './escape';\nimport { Unescape } from './unescape';\nimport { EscapePipe, UnescapePipe } from './pipes';\n\nconst /** @type {?} */ pipes = [\n  EscapePipe,\n  UnescapePipe\n]\n\nconst /** @type {?} */ services = [\n  Escape,\n  Unescape\n]\nexport class HTMLEscapeUnescapeModule {\n  // static forRoot(): ModuleWithProviders {\n  //   return {\n  //     ngModule: HTMLEscapeUnescapeModule,\n  //     providers: [...services]\n  //   }\n  // }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [...pipes],\n  exports: [...pipes],\n  providers: [...services]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HTMLEscapeUnescapeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHTMLEscapeUnescapeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHTMLEscapeUnescapeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Unescape } from '../unescape';\nexport class UnescapePipe implements PipeTransform {\n/**\n * @param {?} unescape\n */\nconstructor(private unescape: Unescape) {}\n/**\n * Pipe method to HTML unescape. Use method it(string, string|number, object) instead.\n * @param {?} value\n * @param {?=} arg\n * @return {?}\n */\ntransform(value: any, arg?: number | string): string {\n    if (value === null || value === undefined) {\n      throw `The input value to the pipe must be a string or a string convertible value like number, booleans, etc.`;\n    }\n\n    return this.unescape.it(value.toString(), arg);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'unescape'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Unescape, },\n];\n}\n\nfunction UnescapePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nUnescapePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUnescapePipe.ctorParameters;\n/** @type {?} */\nUnescapePipe.prototype.unescape;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Escape } from '../escape';\nexport class EscapePipe implements PipeTransform {\n/**\n * @param {?} escape\n */\nconstructor(private escape: Escape) {}\n/**\n * Pipe method to HTML escape. Use method it(string, number|string, object) instead.\n * @param {?} value\n * @param {?=} arg\n * @return {?}\n */\ntransform(value: any, arg?: number | string): string {\n    if (value === null || value === undefined) {\n      throw `The input value to the pipe must be a string or a string convertible value like number, booleans, etc.`;\n    }\n\n    return this.escape.it(value.toString(), arg);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'escape'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Escape, },\n];\n}\n\nfunction EscapePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nEscapePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEscapePipe.ctorParameters;\n/** @type {?} */\nEscapePipe.prototype.escape;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import * as _h from 'he';\nimport { BAD_REQUEST_ERR_MSG, DEEP_ARG } from './config';\nexport class Unescape {\n\n    optionsObject: any = null;\nconstructor() {\n    }\n/**\n * Unescapes a string of escaped html values.\n * @param {?} value\n * @param {?=} arg\n * @param {?=} options\n * @return {?}\n */\nit(value: any, arg?: string | number, options?: any) {\n        if (value === null || value === undefined) {\n            throw BAD_REQUEST_ERR_MSG;\n        }\n        if (options !== undefined && typeof options !== 'object') {\n            throw BAD_REQUEST_ERR_MSG;\n        }\n        value = value.toString();\n\n        if (arg === undefined || arg === null) {\n           return this.unescapeString(value);\n        }\n        if (typeof arg == 'number') {\n            return this.uptoLevel(value, arg);\n        }\n        if (typeof arg == 'string') {\n            if (arg !== DEEP_ARG) {\n                throw BAD_REQUEST_ERR_MSG;\n            }\n            \n            return this.inDeepMode(value);\n        }\n        if (typeof options ==  'object' || (typeof arg == 'object' && typeof options === 'undefined')) {\n            this.optionsObject = options || arg;\n\n            return this.unescapeString(value);\n        }\n\n        throw BAD_REQUEST_ERR_MSG;\n    }\n/**\n * Unescapes HTML entities from a string.\n * @param {?} rawInput\n * @return {?}\n */\nunescapeString(rawInput: string): string {\n    \n        return this.optionsObject !== undefined && this.optionsObject !== null ? _h.unescape(rawInput, this.optionsObject) : _h.unescape(rawInput);\n    }\n/**\n * Performs HTML unescaping, levels number of times.\n * @param {?} rawInput\n * @param {?} levels\n * @return {?}\n */\nuptoLevel(rawInput: string, levels: number ): string {\n        let /** @type {?} */ unescapedString = rawInput;\n        while(levels--) {\n            unescapedString = this.unescapeString(unescapedString);\n        }\n\n        return unescapedString;\n    }\n/**\n * Performs HTML unescaping untill the string is fully Unescaped.\n * @param {?} rawInput\n * @return {?}\n */\ninDeepMode(rawInput: string): string {\n        let /** @type {?} */ unescaped: string = _h.unescape(rawInput);\n\n        while (unescaped.length !== rawInput.length) {\n            rawInput = unescaped;\n            unescaped = _h.unescape(rawInput);\n        }\n\n        return unescaped;\n    }\n\n}\n\nfunction Unescape_tsickle_Closure_declarations() {\n/** @type {?} */\nUnescape.prototype.optionsObject;\n}\n","import * as _h from 'he';\nimport { BAD_REQUEST_ERR_MSG, DEEP_ARG, DOCS_LINK } from './config';\nexport class Escape {\nconstructor() {\n    }\n/**\n * Escapes HTML entities from a string.\n * @param {?} value\n * @param {?=} arg\n * @return {?}\n */\nit(value: any, arg?: string | number) {\n        if (value === null || value === undefined) {\n            throw BAD_REQUEST_ERR_MSG;\n        }\n        value = value.toString();\n\n        if (arg === undefined || arg === null) {\n            return this.escapeString(value);\n        }\n        if (typeof arg == 'number') {\n            return this.uptoLevel(value, arg);\n        }\n        if (typeof arg == 'string') {\n            if (arg === DEEP_ARG){\n                throw 'No :deep on Escape.';\n            }\n        }\n        if (typeof arg ==  'object') {\n            throw `No options for Escape. Refer to the docs at ${DOCS_LINK} to see the correct usage.`;\n        }\n\n        throw BAD_REQUEST_ERR_MSG;\n    }\n/**\n * Escapes HTML entities from a string.\n * @param {?} rawInput\n * @return {?}\n */\nescapeString(rawInput: string): string {\n\n        return _h.escape(rawInput);\n    }\n/**\n * Performs HTML escaping, levels number of times.\n * @param {?} rawInput\n * @param {?} levels\n * @return {?}\n */\nuptoLevel(rawInput: string, levels: number): string {\n        let /** @type {?} */ escapedString = rawInput;\n        while (levels--) {\n            escapedString = this.escapeString(escapedString);\n        }\n\n        return escapedString;\n    }\n\n}","export const /** @type {?} */ BLACKLIST = [\n    `<`,\n    `>`,\n    `&`,\n    `'`,\n    `\"`,\n    `\\``,\n    ` `,\n    `!`,\n    `@`,\n    `$`,\n    `%`, \n    `(`,\n    `)`, \n    `=`, \n    `+`, \n    `{`, \n    `}`, \n    `[`, \n    `]`\n];\n\nexport const /** @type {?} */ HTMLSafe = {\n    '<': ['&lt;', '&#60;', '&#x3C'],\n    '>': ['&gt;', '&#62;', '&#x3E'],\n    '&': ['&amp;', '&#38;', '&#x26'],\n    '\\'': ['&#39;', '&#x27'],\n    '\"': ['&quot;', '&#34;', '&#x22'],\n    '`': ['&#96;', '&#x60'],\n    ' ': ['&nbsp;', '&#32;', '&#x20'],\n    '!': ['&#33;', '&#x21'],\n    '@': ['&#64;', '&#x40'],\n    '$': ['&#36;', '&#x24'],\n    '%': ['&#37;', '&#x25'],\n    '(': ['&#40;', '&#x28'],\n    ')': ['&#41;', '&#x29'], \n    '=': ['&#61;', '&#x3D'], \n    '+': ['&#43;', '&#x2B'], \n    '{': ['&#123;', '&#x7B'], \n    '}': ['&#125;', '&#x7D'], \n    '[': ['&#91;', '&#x5B'], \n    ']': ['&#93;', '&#x5D'],\n};\n\nexport const /** @type {?} */ BAD_REQUEST_ERR_MSG = `Invalid parameter supplied to the pipe. Refer to the docs at https://www.npmjs.com/package/html-escape-unescape to see the correct usage.`;\nexport const /** @type {?} */ DEEP_ARG = 'recursive';\nexport const /** @type {?} */ DOCS_LINK = 'https://www.npmjs.com/package/html-escape-unescape';\n"],"names":["unescape","escape","_h.unescape","_h.escape"],"mappings":"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"}
