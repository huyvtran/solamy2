!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("he")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common","he"],t):t(e["html-escape-unescape"]={},e.ng.core,e.ng.common,e.he)}(this,function(e,t,n,o){"use strict";var r="Invalid parameter supplied to the pipe. Refer to the docs at https://www.npmjs.com/package/html-escape-unescape to see the correct usage.",i=function(){function e(){}return e.prototype.it=function(e,t){if(null===e||e===undefined)throw r;if(e=e.toString(),t===undefined||null===t)return this.escapeString(e);if("number"==typeof t)return this.uptoLevel(e,t);if("string"==typeof t&&"recursive"===t)throw"No :deep on Escape.";if("object"==typeof t)throw"No options for Escape. Refer to the docs at https://www.npmjs.com/package/html-escape-unescape to see the correct usage.";throw r},e.prototype.escapeString=function(e){return o.escape(e)},e.prototype.uptoLevel=function(e,t){for(var n=e;t--;)n=this.escapeString(n);return n},e}(),u=function(){function e(){this.optionsObject=null}return e.prototype.it=function(e,t,n){if(null===e||e===undefined)throw r;if(n!==undefined&&"object"!=typeof n)throw r;if(e=e.toString(),t===undefined||null===t)return this.unescapeString(e);if("number"==typeof t)return this.uptoLevel(e,t);if("string"==typeof t){if("recursive"!==t)throw r;return this.inDeepMode(e)}if("object"==typeof n||"object"==typeof t&&void 0===n)return this.optionsObject=n||t,this.unescapeString(e);throw r},e.prototype.unescapeString=function(e){return this.optionsObject!==undefined&&null!==this.optionsObject?o.unescape(e,this.optionsObject):o.unescape(e)},e.prototype.uptoLevel=function(e,t){for(var n=e;t--;)n=this.unescapeString(n);return n},e.prototype.inDeepMode=function(e){for(var t=o.unescape(e);t.length!==e.length;)e=t,t=o.unescape(e);return t},e}(),p=function(){function e(e){this.escape=e}return e.prototype.transform=function(e,t){if(null===e||e===undefined)throw"The input value to the pipe must be a string or a string convertible value like number, booleans, etc.";return this.escape.it(e.toString(),t)},e}();p.decorators=[{type:t.Pipe,args:[{name:"escape"}]}],p.ctorParameters=function(){return[{type:i}]};var s=function(){function e(e){this.unescape=e}return e.prototype.transform=function(e,t){if(null===e||e===undefined)throw"The input value to the pipe must be a string or a string convertible value like number, booleans, etc.";return this.unescape.it(e.toString(),t)},e}();s.decorators=[{type:t.Pipe,args:[{name:"unescape"}]}],s.ctorParameters=function(){return[{type:u}]};var c=[p,s],a=[i,u],f=function(){return function(){}}();f.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule],declarations:c.slice(),exports:c.slice(),providers:a.slice()}]}],f.ctorParameters=function(){return[]},e.HTMLEscapeUnescapeModule=f,e.ɵc=i,e.ɵa=p,e.ɵb=s,e.ɵd=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=html-escape-unescape.umd.min.js.map
